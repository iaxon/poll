{"ast":null,"code":"import _classCallCheck from \"/home/jakob/Dokumente/development/poll/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jakob/Dokumente/development/poll/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jakob/Dokumente/development/poll/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jakob/Dokumente/development/poll/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jakob/Dokumente/development/poll/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jakob/Dokumente/development/poll/src/Result.tsx\";\nimport * as React from \"react\";\n\nvar Result =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Result, _React$PureComponent);\n\n  function Result(props) {\n    var _this;\n\n    _classCallCheck(this, Result);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Result).call(this, props));\n    _this.state = {\n      percentageWald: Math.round(_this.props.waldNumber / (_this.props.waldNumber + _this.props.bergNumber) * 10000) / 100,\n      percentageBerg: Math.round(_this.props.bergNumber / (_this.props.waldNumber + _this.props.bergNumber) * 10000) / 100\n    };\n    return _this;\n  }\n\n  _createClass(Result, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var percentageWaldStyle = this.state.percentageWald * 0.76;\n      var percentageBergStyle = this.state.percentageBerg * 0.76;\n      var waldStyle = {\n        backgroundColor: '#CCCCCC',\n        width: percentageWaldStyle + '%'\n      };\n      var bergStyle = {\n        backgroundColor: '#FFFFFF',\n        width: percentageBergStyle + '%'\n      };\n      return React.createElement(\"div\", {\n        className: \"ResultContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Wald\"), React.createElement(\"div\", {\n        className: \"percentage\",\n        style: waldStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"percentageNum\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \" \", this.state.percentageWald + \"%\")), React.createElement(\"span\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Berg\"), React.createElement(\"div\", {\n        className: \"percentage\",\n        style: bergStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"percentageNum\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \" \", this.state.percentageBerg + \"%\")), React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          _this2.props.back();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"zur\\xFCck\"));\n    }\n  }]);\n\n  return Result;\n}(React.PureComponent);\n\nexport { Result as default };","map":{"version":3,"sources":["/home/jakob/Dokumente/development/poll/src/Result.tsx"],"names":["React","Result","props","state","percentageWald","Math","round","waldNumber","bergNumber","percentageBerg","percentageWaldStyle","percentageBergStyle","waldStyle","backgroundColor","width","bergStyle","e","back","PureComponent"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;IAaqBC,M;;;;;AACnB,kBAAYC,KAAZ,EAAgC;AAAA;;AAAA;;AAC9B,gFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAEC,IAAI,CAACC,KAAL,CAAY,MAAKJ,KAAL,CAAWK,UAAX,IAAuB,MAAKL,KAAL,CAAWK,UAAX,GAAwB,MAAKL,KAAL,CAAWM,UAA1D,CAAD,GAAwE,KAAnF,IAA0F,GAD/F;AAEXC,MAAAA,cAAc,EAAEJ,IAAI,CAACC,KAAL,CAAY,MAAKJ,KAAL,CAAWM,UAAX,IAAuB,MAAKN,KAAL,CAAWK,UAAX,GAAwB,MAAKL,KAAL,CAAWM,UAA1D,CAAD,GAAwE,KAAnF,IAA0F;AAF/F,KAAb;AAF8B;AAM/B;;;;6BACQ;AAAA;;AACP,UAAME,mBAAmB,GAAG,KAAKP,KAAL,CAAWC,cAAX,GAA4B,IAAxD;AACA,UAAMO,mBAAmB,GAAG,KAAKR,KAAL,CAAWM,cAAX,GAA4B,IAAxD;AACA,UAAMG,SAAS,GAAG;AAChBC,QAAAA,eAAe,EAAE,SADD;AAEhBC,QAAAA,KAAK,EAAEJ,mBAAmB,GAAG;AAFb,OAAlB;AAKA,UAAMK,SAAS,GAAG;AAChBF,QAAAA,eAAe,EAAE,SADD;AAEhBC,QAAAA,KAAK,EAAEH,mBAAmB,GAAG;AAFb,OAAlB;AAMA,aAEE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,KAAK,EAAEC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAiC,KAAKT,KAAL,CAAWC,cAAX,GAA4B,GAA7D,CADF,CAFF,EAKE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,EAOE;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,KAAK,EAAEW,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAiC,KAAKZ,KAAL,CAAWM,cAAX,GAA4B,GAA7D,CADA,CAPF,EAUE;AAAQ,QAAA,OAAO,EAAE,iBAACO,CAAD,EAAW;AAAC,UAAA,MAAI,CAACd,KAAL,CAAWe,IAAX;AAAmB,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVF,CAFF;AAkBD;;;;EAxCiCjB,KAAK,CAACkB,a;;SAArBjB,M","sourcesContent":["import * as React from \"react\";\n\ninterface ResultProps {\n  back: ()=> void;\n  waldNumber: number;\n  bergNumber: number;\n}\n\ninterface ResultState {\n  percentageWald:number\n  percentageBerg:number\n}\n\nexport default class Result extends React.PureComponent<ResultProps, ResultState> {\n  constructor(props: ResultProps) {\n    super(props);\n    this.state = {\n      percentageWald: Math.round((this.props.waldNumber/(this.props.waldNumber + this.props.bergNumber))*10000)/100,\n      percentageBerg: Math.round((this.props.bergNumber/(this.props.waldNumber + this.props.bergNumber))*10000)/100\n    };\n  }\n  render() {\n    const percentageWaldStyle = this.state.percentageWald * 0.76;\n    const percentageBergStyle = this.state.percentageBerg * 0.76;\n    const waldStyle = {\n      backgroundColor: '#CCCCCC',\n      width: percentageWaldStyle + '%',\n    };\n\n    const bergStyle = {\n      backgroundColor: '#FFFFFF',\n      width: percentageBergStyle + '%',\n    };\n\n\n    return (\n\n      <div className=\"ResultContainer\">\n        <span className=\"text\">Wald</span>\n        <div className=\"percentage\" style={waldStyle}>\n          <div className=\"percentageNum\"> {this.state.percentageWald + \"%\"}</div>\n        </div>\n        <span className=\"text\">Berg</span>\n            \n        <div className=\"percentage\" style={bergStyle}>\n        <div className=\"percentageNum\"> {this.state.percentageBerg + \"%\"}</div>\n        </div>\n        <button onClick={(e:any) => {this.props.back();}}>\n          zur√ºck\n        </button>\n    \n    </div>\n    );\n  }\n  \n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}